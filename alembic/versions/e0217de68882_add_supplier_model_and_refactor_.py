"""Add Supplier model and refactor Ingredient model

Revision ID: e0217de68882
Revises: 5260605ee307
Create Date: 2025-06-09 16:57:10.687432

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e0217de68882'
down_revision: Union[str, None] = '5260605ee307'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('website_url', sa.Text(), nullable=True),
    sa.Column('contact_email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uq_user_supplier_name')
    )
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.create_table('ingredient_supplier_association',
    sa.Column('ingredient_id', sa.Integer(), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ondelete='CASCADE'),
    sa.UniqueConstraint('ingredient_id', 'supplier_id', name='uq_ingredient_supplier')
    )
    op.add_column('ingredients', sa.Column('description', sa.Text(), nullable=True))
    op.drop_constraint(op.f('uq_user_ingredient_provider'), 'ingredients', type_='unique')
    op.create_unique_constraint('uq_user_ingredient_name', 'ingredients', ['user_id', 'name'])
    op.drop_column('ingredients', 'provider')
    op.drop_column('ingredients', 'price_url')
    op.drop_column('ingredients', 'price_per_unit')
    op.drop_column('ingredients', 'unit_quantity_kg')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ingredients', sa.Column('unit_quantity_kg', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=False))
    op.add_column('ingredients', sa.Column('price_per_unit', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False))
    op.add_column('ingredients', sa.Column('price_url', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ingredients', sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint('uq_user_ingredient_name', 'ingredients', type_='unique')
    op.create_unique_constraint(op.f('uq_user_ingredient_provider'), 'ingredients', ['user_id', 'name', 'provider'], postgresql_nulls_not_distinct=False)
    op.drop_column('ingredients', 'description')
    op.drop_table('ingredient_supplier_association')
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.drop_table('suppliers')
    # ### end Alembic commands ###
