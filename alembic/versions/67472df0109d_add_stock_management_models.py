"""Add stock management models

Revision ID: 67472df0109d
Revises: 
Create Date: 2025-06-07 15:56:05.324893

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '67472df0109d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock_additions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('quantity_added_grams', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=False),
    sa.Column('cost_of_addition', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('supplier_info', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_additions_id'), 'stock_additions', ['id'], unique=False)
    op.drop_index(op.f('ix_global_costs_settings_id'), table_name='global_costs_settings')
    op.drop_table('global_costs_settings')
    op.add_column('ingredients', sa.Column('current_stock_grams', sa.Numeric(precision=10, scale=3), nullable=False))
    op.add_column('ingredients', sa.Column('reorder_threshold_grams', sa.Numeric(precision=10, scale=3), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('ingredients', 'reorder_threshold_grams')
    op.drop_column('ingredients', 'current_stock_grams')
    op.create_table('global_costs_settings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('monthly_rent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('monthly_utilities', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('global_costs_settings_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('global_costs_settings_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_global_costs_settings_id'), 'global_costs_settings', ['id'], unique=False)
    op.drop_index(op.f('ix_stock_additions_id'), table_name='stock_additions')
    op.drop_table('stock_additions')
    # ### end Alembic commands ###
